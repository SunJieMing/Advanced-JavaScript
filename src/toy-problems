Part 1: Given an array of names, write a function `coldCaller` which returns a random student's name from the input array. Part 2: Modify `coldCaller` so that it does not call on the same student twice before everyone else has been called at least once. Once it has called on everyone, it can call on the same student once again (In other words, `coldCaller` will always call on a student, and never "run out" of students to call on).

Part 1: Write a function which pedrforms a set sequence of operations to an indefinite number of input integers. The sequence: add, subtract, multiply, divide Examples: compute(5, 1, 3); //5 + 1 - 3 === 3 compute(6, 0, 10, 3); //6 + 0 - 10 * 3 === -12 compute(1, 3, 5, 3 ,1); //1 + 3 - 5 * 3 / 1 === -3 Round final decimal answers to 3 decimal places I.e. 1.234
